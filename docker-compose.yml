version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-timesync}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-timesync}
      API_HOST: 0.0.0.0
      API_PORT: ${API_PORT:-3000}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      API_CORS_ORIGINS: ${API_CORS_ORIGINS:-http://localhost:3000}
      JWT_SECRET: ${JWT_SECRET:-change_this_to_a_secure_random_string}
      DEVELOPMENT_MODE: ${DEVELOPMENT_MODE:-false}
    ports:
      - "${API_PORT:-3000}:${API_PORT:-3000}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-3000}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile.discord
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-timesync}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_APPLICATION_ID: ${DISCORD_APPLICATION_ID}
      DISCORD_GUILD_ID: ${DISCORD_GUILD_ID}
      WEB_BASE_URL: ${WEB_BASE_URL:-http://localhost:3000}
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    # Only start the discord bot if the token is provided
    profiles: ["with-discord"]

  # Database migration service - runs once and exits
  db-migrate:
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/db-migrate
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-timesync}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:
    driver: local