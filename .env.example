# TimeSync Configuration
# Copy this file to .env and adjust values as needed

###################
# Database Configuration
###################
# Connection string for SQLx
DATABASE_URL=postgres://postgres:postgres@localhost:5432/timesync
# PostgreSQL user (used for Docker setup)
POSTGRES_USER=postgres
# PostgreSQL password (used for Docker setup)
POSTGRES_PASSWORD=postgres
# PostgreSQL database name (used for Docker setup)
POSTGRES_DB=timesync
# Database connection pool settings
DATABASE_POOL_SIZE=10
DATABASE_MAX_CONNECTIONS=20
DATABASE_TIMEOUT_SECONDS=5

###################
# API Configuration
###################
# Host address for the API server (0.0.0.0 for all interfaces)
API_HOST=0.0.0.0
# Port for the API server
API_PORT=3000
# Log level (debug, info, warn, error)
LOG_LEVEL=info
# CORS allowed origins (comma-separated)
API_CORS_ORIGINS=http://localhost:3000,https://app.timesync.example.com
# Request timeout in seconds
API_REQUEST_TIMEOUT_SECONDS=30

###################
# Security Configuration
###################
# Secret key for JWT token generation (generate a secure random string)
JWT_SECRET=change_this_to_a_secure_random_string
# JWT token expiration time in seconds (default: 24 hours)
JWT_EXPIRY=86400

###################
# Discord Bot Configuration
###################
# Discord bot token from Discord Developer Portal
DISCORD_TOKEN=your_discord_bot_token
# Discord application ID
DISCORD_APPLICATION_ID=your_discord_application_id
# Optional default guild ID for development
DISCORD_GUILD_ID=

###################
# Optional Features
###################
# Email notification settings (SMTP)
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@timesync.example.com
SMTP_FROM_NAME=TimeSync

# Redis cache settings (for future use)
REDIS_URL=redis://localhost:6379
REDIS_CACHE_TTL=3600

###################
# Development Settings
###################
# Set to 1 to display full backtraces
RUST_BACKTRACE=1
# Enable development mode features
DEVELOPMENT_MODE=true

# Note: Generate a secure random string for JWT_SECRET with:
# openssl rand -base64 32